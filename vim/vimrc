set nocompatible              " be iMproved, required
filetype off                  " required
set shell=/bin/zsh

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle (required)!
Plugin 'gmarik/vundle'

Plugin 'altercation/vim-colors-solarized'

Plugin 'tpope/vim-sensible'
Plugin 'ervandew/supertab'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-cucumber'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-rake'
Plugin 'tpope/vim-unimpaired'

" Syntax Highlighting
Plugin 'pangloss/vim-javascript'
Plugin 'slim-template/vim-slim.git'
Plugin 'kchmck/vim-coffee-script'
Plugin 'vim-ruby/vim-ruby'
Plugin 'koron/nyancat-vim'
Plugin 'elixir-lang/vim-elixir'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'blackrush/vim-gocode'

Plugin 'kana/vim-textobj-user'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'Rykka/riv.vim'
Plugin 'mv/mv-vim-nginx'
Plugin 'tpope/vim-foreplay'
Plugin 'tpope/vim-classpath'
Plugin 'guns/vim-clojure-static'
Plugin 'tpope/vim-rails'
Plugin 'thoughtbot/vim-rspec'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
Plugin 'godlygeek/tabular'
Plugin 'mileszs/ack.vim'
Plugin 'junegunn/vim-easy-align'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Always use 2 spaces.
set shiftwidth=2
set tabstop=2

" Set relative number
set relativenumber

" Ignore some files in ctrl-p
set wildignore+=*/tmp/*,*/vendor/bundle/*

" Global directory for undo files.
set undofile
set undodir^=~/.vim/undo

" With syntax group debugging.
set statusline=   " clear the statusline for when vimrc is reloaded
set statusline+=\                            " single space
set statusline+=%f\                          " file name
set statusline+=[%{strlen(&ft)?&ft:'none'}]  " filetype
set statusline+=%h%m%r%w                     " flags
set statusline+=%=                           " right align
"set statusline+=(%{synIDattr(synID(line('.'),col('.'),1),'name')})\  " highlight
set statusline+=%P

" File encding.
set encoding=utf-8

" Where to store swap files.
set directory=~/.tmp

" Set mapleader to an easier key.
let mapleader=","
let maplocalleader=","

nnoremap <Leader>a  :Ack
map      <Leader>a  :call    RunAllSpecs()<CR>
nnoremap <Leader>b  :!bundle install<cr>
nnoremap <Leader>e  :e       <C-R>=expand("%:p:h") . '/'<CR>
nnoremap <leader>ev :vsplit  $MYVIMRC<cr>
map      <Leader>l  :call    RunLastSpec()<CR>
nnoremap <Leader>q  :e       ~/qcentrix/
nnoremap <Leader>s  :split   <C-R>=expand("%:p:h") . '/'<CR>
map      <Leader>s  :call    RunNearestSpec()<CR>
nnoremap <leader>sv :source  $MYVIMRC<cr>
map      <Leader>t  :call    RunCurrentSpecFile()<CR>
nnoremap <Leader>v  :vnew    <C-R>=expand("%:p:h") . '/'<CR>
nnoremap H          ^
nnoremap L          $
inoremap jk         <esc>
inoremap <c-h>      <left>
inoremap <c-j>      <down>
inoremap <c-k>      <up>
inoremap <c-l>      <right>
nnoremap <C-h>      :nohl<cr>
inoremap <c-o>      <esc>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE (thanks Gary Bernhardt)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <Leader>n :call RenameFile()<cr>

" Display extra whitespace
set list listchars=tab:»·,trail:·

" Themes...
let g:solarized_termcolors=256
set background=dark
colorscheme solarized

" RSpec.vim mappings
let g:rspec_command='call Send_to_Tmux("be rspec {spec}\n")'

" Proper filetype for markdown files.
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
